from pathlib import Path
path = Path(r"c:\Users\EvSchneider\cm360-audit\Code.js")
text = path.read_text(encoding='utf-8')
old = "\tlet rowsToInclude = rowHtmlFragments.length;\n\tlet truncated = false;\n\tlet htmlBody = buildHtmlBody(rowsToInclude, truncated);\n\n\tif (htmlBody.length > EMAIL_BODY_BYTE_LIMIT) {\n\t\ttruncated = true;\n\t\twhile (rowsToInclude > 0 && htmlBody.length > EMAIL_BODY_BYTE_LIMIT) {\n\t\t\trowsToInclude--;\n\t\t\thtmlBody = buildHtmlBody(rowsToInclude, true);\n\t\t}\n\n\t\tif (htmlBody.length > EMAIL_BODY_BYTE_LIMIT) {\n\t\t\thtmlBody = `\n\t<p style=\\\"font-family:Arial, sans-serif; font-size:13px; line-height:1.4;\\\">${summaryText}</p>\n\t<p style=\\\"font-family:Arial, sans-serif; font-size:12px;\\\">The flagged placements table was omitted because it exceeded the email body limit. Please review the attached file for the full list of flags.</p>\n\t<p style=\\\"margin-top:12px; font-family:Arial, sans-serif; font-size:12px;\\\">&mdash; Platform Solutions Team</p>\n\t`;\n\t\t\tLogger.log(`[${configName}] Email body limit reached; table omitted entirely. Final length ${htmlBody.length} chars (limit ${EMAIL_BODY_BYTE_LIMIT}).`);\n\t\t\trowsToInclude = 0;\n\t\t} else {\n\t\t\tconst removed = emailRows.length - rowsToInclude;\n\t\t\tLogger.log(`[${configName}] Email body truncated to ${rowsToInclude} of ${emailRows.length} rows (${htmlBody.length} chars, limit ${EMAIL_BODY_BYTE_LIMIT}). ${removed} row(s) moved to attachment only.`);\n\t\t}\n\t} else {\n\t\tLogger.log(`[${configName}] Email body length ${htmlBody.length} chars with ${rowsToInclude} rows (limit ${EMAIL_BODY_BYTE_LIMIT}).`);\n\t}\n"
if old not in text:
    raise SystemExit('Old email truncation block not found')
new = "\tlet rowsToInclude = rowHtmlFragments.length;\n\tlet truncated = false;\n\tlet htmlBody = buildHtmlBody(rowsToInclude, truncated);\n\tlet payloadSize = getEmailPayloadSize_(htmlBody, '');\n\n\tif (payloadSize.totalBytes > EMAIL_BODY_BYTE_LIMIT) {\n\t\ttruncated = true;\n\t\twhile (rowsToInclude > 0 && payloadSize.totalBytes > EMAIL_BODY_BYTE_LIMIT) {\n\t\t\trowsToInclude--;\n\t\t\thtmlBody = buildHtmlBody(rowsToInclude, true);\n\t\t\tpayloadSize = getEmailPayloadSize_(htmlBody, '');\n\t\t}\n\n\t\tif (payloadSize.totalBytes > EMAIL_BODY_BYTE_LIMIT) {\n\t\t\thtmlBody = `\n\t<p style=\\\"font-family:Arial, sans-serif; font-size:13px; line-height:1.4;\\\">${summaryText}</p>\n\t<p style=\\\"font-family:Arial, sans-serif; font-size:12px;\\\">The flagged placements table was omitted because it exceeded the email body limit. Please review the attached file for the full list of flags.</p>\n\t<p style=\\\"margin-top:12px; font-family:Arial, sans-serif; font-size:12px;\\\">&mdash; Platform Solutions Team</p>\n\t`;\n\t\t\tpayloadSize = getEmailPayloadSize_(htmlBody, '');\n\t\t\tLogger.log(`[${configName}] Email body limit reached; table omitted entirely. Final size ${payloadSize.totalBytes}B (limit ${EMAIL_BODY_BYTE_LIMIT}B).`);\n\t\t\trowsToInclude = 0;\n\t\t} else {\n\t\t\tconst removed = emailRows.length - rowsToInclude;\n\t\t\tLogger.log(`[${configName}] Email body truncated to ${rowsToInclude} of ${emailRows.length} rows (${payloadSize.totalBytes}B, limit ${EMAIL_BODY_BYTE_LIMIT}B). ${removed} row(s) moved to attachment only.`);\n\t\t}\n\t} else {\n\t\tLogger.log(`[${configName}] Email body size ${payloadSize.totalBytes}B with ${rowsToInclude} rows (limit ${EMAIL_BODY_BYTE_LIMIT}B).`);\n\t}\n"
text = text.replace(old, new, 1)
path.write_text(text, encoding='utf-8')
